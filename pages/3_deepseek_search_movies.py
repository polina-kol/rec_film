import streamlit as st
import pandas as pd
import numpy as np
from sentence_transformers import SentenceTransformer
import faiss
from langchain_groq import ChatGroq
from langchain_core.messages import SystemMessage, HumanMessage

# === API –∫–ª—é—á ===
GROQ_API_KEY = "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"

MODEL_NAME = "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2"
GROQ_MODEL = "deepseek-r1-distill-llama-70b"

@st.cache_data
def load_data():
    return pd.read_csv("movies_list.csv")

@st.cache_resource
def load_model_and_index():
    model = SentenceTransformer(MODEL_NAME)
    vectors = np.load("movie_vectors.npy")
    index = faiss.read_index("index.bin")
    return model, index, vectors

def find_similar_movies(query, model, index, df, top_k=5):
    query_vec = model.encode([query]).astype('float32')
    D, I = index.search(query_vec, top_k)
    return df.iloc[I[0]]

def format_movies_for_prompt(docs):
    lines = []
    for i, row in docs.iterrows():
        lines.append(f"{i+1}. {row['movie_title']} ({row.get('year', '?')}) ‚Äî –∂–∞–Ω—Ä: {row.get('genre', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n–û–ø–∏—Å–∞–Ω–∏–µ: {row.get('description', '')[:200]}...")
    return "\n".join(lines)

def get_groq_llm():
    return ChatGroq(
        model=GROQ_MODEL,
        temperature=0.7,
        max_tokens=1500,
        api_key=GROQ_API_KEY
    )

st.title("üé¨ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")

df = load_data()
model, index, vectors = load_model_and_index()

user_query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–§–∏–ª—å–º –ø—Ä–æ –ª—é–±–æ–≤—å –≤ —Å—Ç–∏–ª–µ –∞–Ω–∏–º–µ'")

if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"):
    if not user_query.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!")
    else:
        with st.spinner("–ì–æ—Ç–æ–≤–ª—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
            try:
                llm = get_groq_llm()
                
                # 1. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ LLM –±–µ–∑ –±–∞–∑—ã
                system_msg_1 = SystemMessage(content=(
                    "–¢—ã –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫ —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –û—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏, –∫—Ä–∞—Ç–∫–æ –∏ —Å–º–µ—à–Ω–æ, –Ω–æ –ø–æ –¥–µ–ª—É. "
                    "–î–∞–π –∑–∞–±–∞–≤–Ω—ã–µ –∏ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Å–≤–æ–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö."
                ))
                human_msg_1 = HumanMessage(content=f"–ó–∞–ø—Ä–æ—Å: {user_query}\n\n–î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤.")

                llm_answer_1 = llm.invoke([system_msg_1, human_msg_1]).content

                # 2. –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ñ–∏–ª—å–º–æ–≤ –∏–∑ –±–∞–∑—ã
                similar_movies = find_similar_movies(user_query, model, index, df, top_k=5)

                if similar_movies.empty:
                    movies_text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –ø–æ—Ö–æ–∂–µ–≥–æ –≤ –±–∞–∑–µ –Ω–µ—Ç."
                else:
                    movies_text = format_movies_for_prompt(similar_movies)

                # 3. –ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ LLM —Å —é–º–æ—Ä–æ–º
                system_msg_2 = SystemMessage(content=(
                    "–¢—ã –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫ —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤, "
                    "–∫—Ä–∞—Ç–∫–æ –∏ –æ—Å—Ç—Ä–æ—É–º–Ω–æ –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –ø–æ–¥ –∑–∞–ø—Ä–æ—Å."
                ))
                human_msg_2 = HumanMessage(content=f"–ó–∞–ø—Ä–æ—Å: {user_query}\n\n–§–∏–ª—å–º—ã:\n{movies_text}\n\n–ß—Ç–æ –¥—É–º–∞–µ—à—å?")

                llm_answer_2 = llm.invoke([system_msg_2, human_msg_2]).content

                # –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã –≤ –µ–¥–∏–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                combined_answer = f"{llm_answer_1}\n\n{llm_answer_2}"

                st.markdown("### üí¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –º–Ω–µ–Ω–∏–µ:")
                st.markdown(combined_answer)

            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞: {e}")
