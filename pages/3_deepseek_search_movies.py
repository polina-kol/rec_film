import streamlit as st
import pandas as pd
import numpy as np
from sentence_transformers import SentenceTransformer
import faiss
from langchain_groq import ChatGroq
from langchain_core.messages import SystemMessage, HumanMessage

# üëâ –£–∫–∞–∑–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏
GROQ_MODEL = "mixtral-8x7b"
GROQ_API_KEY = "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"

MODEL_NAME = "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2"

@st.cache_data
def load_data():
    return pd.read_csv("movies_list.csv")

@st.cache_resource
def load_model_and_index():
    model = SentenceTransformer(MODEL_NAME)
    vectors = np.load("movie_vectors.npy")
    index = faiss.read_index("index.bin")
    return model, index, vectors

def find_similar_movies(query, model, index, df, top_k=5):
    query_vec = model.encode([query]).astype('float32')
    D, I = index.search(query_vec, top_k)
    return df.iloc[I[0]]

def format_movies_for_prompt(docs):
    lines = []
    for i, row in docs.iterrows():
        lines.append(f"{i+1}. {row['movie_title']} ({row.get('year', '?')}) ‚Äî –∂–∞–Ω—Ä: {row.get('genre', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n–û–ø–∏—Å–∞–Ω–∏–µ: {row.get('description', '')[:200]}...")
    return "\n".join(lines)

def get_groq_llm():
    return ChatGroq(
        model=GROQ_MODEL,
        temperature=0.7,
        max_tokens=1500,
        api_key=GROQ_API_KEY
    )

st.title("üé¨ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")

df = load_data()
model, index, vectors = load_model_and_index()

user_query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–Ω–æ–≤–æ–≥–æ–¥–Ω—è—è –Ω–æ—á—å'")

if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"):
    if not user_query.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!")
    else:
        with st.spinner("–ì–æ—Ç–æ–≤–ª—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."):
            try:
                llm = get_groq_llm()
                
                # –ù–∞–π–¥—ë–º –ø–æ—Ö–æ–∂–∏–µ —Ñ–∏–ª—å–º—ã
                similar_movies = find_similar_movies(user_query, model, index, df, top_k=5)
                if similar_movies.empty:
                    movies_text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –ø–æ—Ö–æ–∂–µ–≥–æ –≤ –±–∞–∑–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
                else:
                    movies_text = format_movies_for_prompt(similar_movies)
                
                # –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
                system_msg = SystemMessage(content="""
–¢—ã —Ä—É—Å—Å–∫–∏–π –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫ —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –æ—Ç–∑—ã–≤–∞–º–∏ –ø–æ —Ñ–∏–ª—å–º–∞–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –∏ –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
‚ùó–°–¢–†–û–ì–û –ó–ê–ü–†–ï–©–ï–ù–û:

- –Ω–∞—á–∏–Ω–∞—Ç—å —Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π, –≤—Ä–æ–¥–µ: ¬´–•–æ—Ä–æ—à–æ, —è –ø–æ–ª—É—á–∏–ª –∑–∞–ø—Ä–æ—Å‚Ä¶¬ª, ¬´–°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä—é‚Ä¶¬ª, ¬´–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à—É‚Ä¶¬ª, ¬´–ü–æ–¥—É–º–∞—é‚Ä¶¬ª, ¬´–ú–Ω–µ –Ω—É–∂–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å‚Ä¶¬ª, ¬´–ì–æ—Ç–æ–≤–æ, –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å‚Ä¶¬ª –∏ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∑, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å—ã–≤–∞—é—Ç –ø—Ä–æ—Ü–µ—Å—Å –º—ã—Å–ª–∏.

–¢—ã –ù–ï –¥–æ–ª–∂–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —Ç—ã –°–ï–ô–ß–ê–° —á—Ç–æ-—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –î–ï–õ–ê–ô —Å—Ä–∞–∑—É.
–ù–∏–∫–∞–∫–∏—Ö —Ñ—Ä–∞–∑ –ø—Ä–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É, —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è, –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ –ø–ª–∞–Ω—ã.
‚ùó–ó–∞–ø—Ä–µ—â–µ–Ω–æ:
- –ø–∏—Å–∞—Ç—å, —á—Ç–æ —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è —Å–¥–µ–ª–∞—Ç—å;
- –æ–±—Å—É–∂–¥–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç;
- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π;
- –¥–µ–ª–∞—Ç—å –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏–ª–∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è;
- –Ω–∞—á–∏–Ω–∞—Ç—å —Å ¬´–•–æ—Ä–æ—à–æ, —è –ø–æ–ª—É—á–∏–ª‚Ä¶¬ª, ¬´–¢–µ–ø–µ—Ä—å –ø–æ–¥—É–º–∞—é‚Ä¶¬ª, ¬´–°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º‚Ä¶¬ª, ¬´–ò—Ç–∞–∫‚Ä¶¬ª, ¬´–Ø –≤–∏–∂—É, —á—Ç–æ‚Ä¶¬ª, ¬´–§–∏–ª—å–º‚Ä¶ ‚Äî —ç—Ç–æ‚Ä¶¬ª –∏ –¥—Ä—É–≥–∏–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–∑—ã–≤–∞–º–∏.

‚úÖ –¢—Ä–µ–±—É–µ—Ç—Å—è:
- —Å—Ä–∞–∑—É –∂–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ø–∏—Å–∫—É —Ñ–∏–ª—å–º–æ–≤;
- —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å Markdown;
- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `#`, `##`, `###` –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤;
- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤;
- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏, –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ.

–ü—Ä–∏–º–µ—Ä:
### üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ (–≥–æ–¥)
**–ñ–∞–Ω—Ä:** –∫–æ–º–µ–¥–∏—è  
–û–ø–∏—Å–∞–Ω–∏–µ...  
–ú–Ω–µ–Ω–∏–µ...

–í –∫–æ–Ω—Ü–µ ‚Äî `## üéÅ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏`.

–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π <think>, –Ω–µ –æ–±—ä—è—Å–Ω—è–π —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è. –ü—Ä–æ—Å—Ç–æ –≤—ã–¥–∞–π –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–∞–∫ —Ä–µ—Ü–µ–Ω–∑–∏—è –Ω–∞ —Å–∞–π—Ç–µ.
–ü–æ—Å–ª–µ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã —Ç—ã –î–û–õ–ñ–ï–ù –¥–∞—Ç—å –°–û–í–°–ï–ú –ù–û–í–´–ï —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—ã–ª–æ –≤ —Å–ø–∏—Å–∫–µ. –≠—Ç–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –ø–æ —Ç–≤–æ–µ–º—É –≤—ã–±–æ—Ä—É, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ —Ç–µ–º–µ –∑–∞–ø—Ä–æ—Å–∞.
–ï—Å–ª–∏ —Ç—ã –Ω–∞—Ä—É—à–∏—à—å —ç—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ ‚Äî —Ç–≤–æ–π –æ—Ç–≤–µ—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—à–∏–±–æ—á–Ω—ã–º.
""")

                human_msg = HumanMessage(content=f"–¢–µ–º–∞: {user_query}\n\n–§–∏–ª—å–º—ã:\n{movies_text}")

                answer = llm.invoke([system_msg, human_msg]).content

                # –£–¥–∞–ª–∏–º <think> –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø–æ—è–≤–∏–ª–æ—Å—å
                clean_answer = answer.replace("<think>", "").replace("</think>", "").strip()

                st.subheader("üí¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –º–Ω–µ–Ω–∏–µ:")
                st.write(clean_answer)

            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞: {e}")
